import type { AstroI18nConfig, ConfigTranslations } from "../../../core/config/types";
import type { TranslationMap } from "../../../core/translation/types";
/**
 * Typed astro-i18n config definition.
 */
export declare function defineAstroI18nConfig(config: Partial<AstroI18nConfig>): Partial<AstroI18nConfig>;
/**
 * Separates ConfigTranslations common group from the route groups and the other
 * extra groups.
 */
export declare function categorizeConfigTranslationsGroups(configTranslations: ConfigTranslations | TranslationMap): {
    routes: string[];
    extra: string[];
    common: string | undefined;
};
/**
 * Extracts all the non-page translation groups from the main astro-i18n
 * directory.
 * Looks for `"/i18n/group/locale.json"` files.
 */
export declare function getProjectTranslationGroups(projectRoot: string, config?: Partial<AstroI18nConfig>): Promise<ConfigTranslations>;
/**
 * Crawls directories looking for an astro-i18n's config file and returns its
 * path.
 */
export declare function autofindAstroI18nConfig(startingPath: string): Promise<string | null>;
/**
 * Crawls directories looking for an Astro's config file and returns the
 * directory where its contained.
 * If a package.json is found it also checks if astro-i18n is in the dependencies.
 */
export declare function autofindProjectRoot(startingPath: string): Promise<string | null>;
export declare function hasAstroConfig(directory: string): Promise<boolean>;
