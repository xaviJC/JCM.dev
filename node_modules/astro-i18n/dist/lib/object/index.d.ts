/**
 * Merges `object` into `base`
 * @param options.mode `"fill"` merges when the property doesn't exist,
 * `"replace"` replaces duplicate properties, default `"replace"`.
 * @param options.mutable `base` will be modified when `true`, otherwise the
 * modifications will happen on a deep clone, default `true`.
 * @returns `undefined` unless when `options.mutable` is set to true.
 */
export declare function merge(base: Record<string, unknown>, object: Record<string, unknown>, options?: Partial<{
    mode: "fill" | "replace";
    mutable: boolean;
}>): Record<string, unknown> | undefined;
/**
 * Sets a property on an object. The property can be nested, if duplicate keys
 * are found they will be overriden.
 */
export declare function setObjectProperty(obj: Record<string, unknown>, key: string | string[], value: unknown): void;
